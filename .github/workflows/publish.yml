name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: "Type 'publish' to confirm publishing to PyPI"
        required: true
        default: ""

jobs:
  build-and-publish:
    if: github.event.inputs.confirm == 'publish'
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for PyPI trusted publishing
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build distributions
        run: |
          python -m build

      - name: Get version from pyproject
        id: get_version
        run: |
          python - <<'PY' > version.txt
          import tomllib
          print(tomllib.load(open('pyproject.toml','rb'))['project']['version'])
          PY
          echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          verbose: true

      # # Uncomment the following step to publish to TestPyPI instead
      # - name: Publish to TestPyPI
      #   if: false  # set to true to use TestPyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     packages-dir: dist/
      #     repository-url: https://test.pypi.org/legacy/

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
      - build-and-publish
    runs-on: ubuntu-latest

    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases
      id-token: write # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
