name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: "Type 'publish' to confirm publishing to PyPI"
        required: true
        default: ""

jobs:
  build-and-publish:
    if: github.event.inputs.confirm == 'publish'
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for PyPI trusted publishing
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build distributions
        run: |
          python -m build

      - name: Get version from pyproject
        id: get_version
        run: |
          python - <<'PY' > version.txt
          import tomllib
          print(tomllib.load(open('pyproject.toml','rb'))['project']['version'])
          PY
          echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          verbose: true

      # Uncomment the following step to publish to TestPyPI instead
      - name: Publish to TestPyPI
        if: false  # set to true to use TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          repository-url: https://test.pypi.org/legacy/

      - name: Generate SLSA provenance for build artifacts
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: "dist/*"

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.7.0

      - name: Sign distribution artifacts with Sigstore
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          set -e
          for f in dist/*; do
            cosign sign-blob --yes --output-signature "$f.sig" "$f"
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: v${{ steps.get_version.outputs.version }}
          generate_release_notes: true
          files: |
            dist/*
            dist/*.sig
